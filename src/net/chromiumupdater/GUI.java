package net.chromiumupdater;

import java.util.Date;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author morth
 */
public class GUI extends javax.swing.JFrame {
    protected boolean forceChecked = false;
    public boolean showUpdateButton = false;
    /**
     * Creates new form GUI
     */
    public GUI() {
        try {
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
        } catch (InstantiationException ex) {
            ex.printStackTrace();
        } catch (IllegalAccessException ex) {
            ex.printStackTrace();
        } catch (UnsupportedLookAndFeelException ex) {
            ex.printStackTrace();
        }
        
        initComponents();
	forceChecked = false;
    }

    public void setLocalVersion(Integer version) {
        localversion.setText((version != 0) ? version.toString() : "not found");
    }

    public void setRemoteVersion(Integer version) {
        remoteversion.setText(version.toString());
    }

    public void setLastUpdateTime(long time) {
        if (time != 0) {
            lastUpdateTime.setText(new Date(time).toString());
        } else {
            lastUpdateTime.setText("never");
        }
    }

    public void setProgress(int value) {
        progressBar.setIndeterminate(false);
        progressBar.setValue(value);
        progressBar.setStringPainted(true);
        Thread.yield();
    }

    public void startProgBar() {
        progressBar.setMinimum(0);
        progressBar.setMaximum(1);
        progressBar.setIndeterminate(true);
    }

    public void setProgressMinMax(int min, int max) {
        progressBar.setMinimum(min);
        progressBar.setMaximum(max);
    }

    public void setProgressBarText(String s) {
        progressBar.setString(s);
    }

    void setLabel(String s) {
        doneLabel.setText(s);
    }

    void showUpdateButton() {
	showUpdateButton = true;
        updateButton.setEnabled(true);
    }

    void hideUpdateButton() {
	    updateButton.setEnabled(false);
    }

    void setChangeLog(String s) {
	releaseNotesArea.setText(s);
    }


    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        updateButton = new javax.swing.JButton();
        aboutButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        localversion = new javax.swing.JLabel();
        remoteversion = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        jLabel4 = new javax.swing.JLabel();
        lastUpdateTime = new javax.swing.JLabel();
        doneLabel = new javax.swing.JLabel();
        forceCheck = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        releaseNotesArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chromium Updater");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Chromium Updater");

        updateButton.setText("Update");
        updateButton.setEnabled(false);
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        aboutButton.setText("About");
        aboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("local version:");

        jLabel3.setText("remote version:");

        localversion.setText("[version]");

        remoteversion.setText("[version]");

        jLabel4.setText("last checked:");

        lastUpdateTime.setText("[time]");

        forceCheck.setText("Force?");
        forceCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forceCheckActionPerformed(evt);
            }
        });

        releaseNotesArea.setColumns(20);
        releaseNotesArea.setRows(5);
        jScrollPane1.setViewportView(releaseNotesArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(localversion)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(remoteversion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lastUpdateTime))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(updateButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(doneLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(forceCheck)
                        .addGap(18, 18, 18)
                        .addComponent(aboutButton))
                    .addComponent(progressBar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lastUpdateTime)
                    .addComponent(jLabel2)
                    .addComponent(localversion)
                    .addComponent(jLabel3)
                    .addComponent(remoteversion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(aboutButton)
                        .addComponent(updateButton)
                        .addComponent(forceCheck))
                    .addComponent(doneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        ChromiumUpdater.update(this);
    }//GEN-LAST:event_updateButtonActionPerformed

    private void aboutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutButtonActionPerformed
        AboutGui ag = new AboutGui();
        ag.runAbout();
    }//GEN-LAST:event_aboutButtonActionPerformed

    private void forceCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forceCheckActionPerformed
	forceChecked = !forceChecked;
	if(forceChecked) {
	    showUpdateButton();
	} else {
	    hideUpdateButton();
	}
    }//GEN-LAST:event_forceCheckActionPerformed

    /**
     * @param args the command line arguments
     */
    public void runGUI() {
        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aboutButton;
    private javax.swing.JLabel doneLabel;
    private javax.swing.JCheckBox forceCheck;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lastUpdateTime;
    private javax.swing.JLabel localversion;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JTextArea releaseNotesArea;
    private javax.swing.JLabel remoteversion;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}